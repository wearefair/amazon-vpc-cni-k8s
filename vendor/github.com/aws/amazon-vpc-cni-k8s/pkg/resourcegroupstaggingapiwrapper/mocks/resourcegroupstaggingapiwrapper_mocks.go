// Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-vpc-cni-k8s/pkg/resourcegroupstaggingapiwrapper (interfaces: ResourceGroupsTaggingAPI)

// Package mock_resourcegroupstaggingapiwrapper is a generated GoMock package.
package mock_resourcegroupstaggingapiwrapper

import (
	reflect "reflect"

	"github.com/aws/aws-sdk-go/service/resourcegroupstaggingapi"
	gomock "github.com/golang/mock/gomock"
)

// MockResourceGroupsTaggingAPI is a mock of ResourceGroupsTaggingAPI interface
type MockResourceGroupsTaggingAPI struct {
	ctrl     *gomock.Controller
	recorder *MockResourceGroupsTaggingAPIMockRecorder
}

// MockResourceGroupsTaggingAPIMockRecorder is the mock recorder for MockResourceGroupsTaggingAPI
type MockResourceGroupsTaggingAPIMockRecorder struct {
	mock *MockResourceGroupsTaggingAPI
}

// NewMockResourceGroupsTaggingAPI creates a new mock instance
func NewMockResourceGroupsTaggingAPI(ctrl *gomock.Controller) *MockResourceGroupsTaggingAPI {
	mock := &MockResourceGroupsTaggingAPI{ctrl: ctrl}
	mock.recorder = &MockResourceGroupsTaggingAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResourceGroupsTaggingAPI) EXPECT() *MockResourceGroupsTaggingAPIMockRecorder {
	return m.recorder
}

// TagResources mocks base method
func (m *MockResourceGroupsTaggingAPI) TagResources(arg0 *resourcegroupstaggingapi.TagResourcesInput) (*resourcegroupstaggingapi.TagResourcesOutput, error) {
	ret := m.ctrl.Call(m, "TagResources", arg0)
	ret0, _ := ret[0].(*resourcegroupstaggingapi.TagResourcesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResources indicates an expected call of TagResources
func (mr *MockResourceGroupsTaggingAPIMockRecorder) TagResources(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResources", reflect.TypeOf((*MockResourceGroupsTaggingAPI)(nil).TagResources), arg0)
}
